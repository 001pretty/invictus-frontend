{"version":3,"sources":["components/account/login/MainLogin.js","pages/Account/Login.js"],"names":["MainLogin","useForm","register","handleSubmit","errors","history","useHistory","useState","errorMessage","setErrorMessage","useContext","AuthContext","auth","token","userId","setIsAuth","setTokenValue","setUserIdValue","inputRef","useRef","useEffect","current","focus","onSubmit","data","axios","post","email","password","then","res","localStorage","setItem","expiryDate","Date","getTime","toISOString","goBack","catch","err","className","style","color","type","placeholder","name","autoComplete","ref","e","required","minLength","target","to","Login","Header"],"mappings":"oOAuGeA,MA9Ff,WAAsB,IAAD,EACwBC,cAAnCC,EADW,EACXA,SAAUC,EADC,EACDA,aAAcC,EADb,EACaA,OAC1BC,EAAUC,cAFG,EAGqBC,mBAAS,IAH9B,mBAGZC,EAHY,KAGEC,EAHF,OAKaC,qBAAWC,KAAnCC,EALW,EAKXA,KAAMC,EALK,EAKLA,MAAOC,EALF,EAKEA,OACZC,EANU,YAMGH,EANH,MAOVI,EAPU,YAOOH,EAPP,MAQVI,EARU,YAQQH,EARR,MAUbI,EAAWC,mBA6BjB,OA5BAC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IA2BH,0BAAMC,SAAUpB,GAzBC,SAACqB,GAChBC,IACGC,KAAK,cAAe,CACnBC,MAAOH,EAAKG,MACZC,SAAUJ,EAAKI,WAEhBC,MAAK,SAACC,GACLf,GAAU,GACVC,EAAcc,EAAIN,KAAKX,OACvBI,EAAea,EAAIN,KAAKV,QACxBiB,aAAaC,QAAQ,QAASF,EAAIN,KAAKX,OACvCkB,aAAaC,QAAQ,SAAUF,EAAIN,KAAKV,QACxC,IACMmB,EAAa,IAAIC,MACrB,IAAIA,MAAOC,UAFiB,MAI9BJ,aAAaC,QAAQ,aAAcC,EAAWG,eAC9C/B,EAAQgC,YAETC,OAAM,SAACC,GACN9B,EAAgB,iDAMpB,yBAAK+B,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACVpC,EAAOwB,UACN,uBAAGY,UAAU,YAAYC,MAAO,CAAEC,MAAO,QAAzC,uBAIDtC,EAAOuB,OACN,uBAAGa,UAAU,YAAYC,MAAO,CAAEC,MAAO,QAAzC,oBAIF,uBAAGF,UAAU,YAAYC,MAAO,CAAEC,MAAO,QACtClC,GAEH,yBAAKgC,UAAU,gBAAf,SACA,uBAAGA,UAAU,aAAb,0CACA,2BACEG,KAAK,QACLC,YAAY,gBACZC,KAAK,QACLC,aAAa,WACbC,IAAK,SAACC,GACF9C,EAAS8C,EAAG,CAACC,UAAU,EAAMC,UAAW,IACxChC,EAASG,QAAU2B,KAIzB,2BACEL,KAAK,WACLC,YAAY,WACZC,KAAK,WACLC,aAAa,mBACbC,IAAK7C,EAAS,CAAE+C,UAAU,EAAMC,UAAW,MAE7C,4BAAQP,KAAK,SAASH,UAAU,eAAeW,OAAO,UACpD,wCAEJ,6BACA,yBAAKX,UAAU,aAAf,6BAC6B,IAC3B,kBAAC,IAAD,CAAMY,GAAG,YAAYX,MAAO,CAAEC,MAAO,YAArC,uBC9EGW,UATf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD","file":"static/js/4.cab4c531.chunk.js","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport \"./MainLogin.css\";\r\n\r\n\r\nfunction MainLogin() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const { auth, token, userId } = useContext(AuthContext);\r\n  const [, setIsAuth] = auth;\r\n  const [, setTokenValue] = token;\r\n  const [, setUserIdValue] = userId;\r\n\r\n  const inputRef = useRef();\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"/auth/login\", {\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n      .then((res) => {\r\n        setIsAuth(true);\r\n        setTokenValue(res.data.token);\r\n        setUserIdValue(res.data.userId);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"userId\", res.data.userId);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n          new Date().getTime() + remainingMilliseconds\r\n        );\r\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\r\n        history.goBack();\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage(\"Invalid input or email does not exist.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n  <form onSubmit={handleSubmit(onSubmit)}>\r\n    <div className=\"LoginContainer\">\r\n      <div className=\"LoginFormWrapper\">\r\n        <div className=\"LoginForm\">\r\n            {errors.password && (\r\n              <p className=\"LoginText\" style={{ color: \"red\" }}>\r\n                Password is invalid\r\n              </p>\r\n            )}\r\n            {errors.email && (\r\n              <p className=\"LoginText\" style={{ color: \"red\" }}>\r\n                Email is invalid\r\n              </p>\r\n            )}\r\n            <p className=\"LoginText\" style={{ color: \"red\" }}>\r\n              {errorMessage}\r\n            </p>\r\n            <div className=\"LoginHeading\">LOGIN</div>\r\n            <p className=\"LoginText\">Please enter your e-mail and password:</p>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email address\"\r\n              name=\"email\"\r\n              autoComplete=\"username\"\r\n              ref={(e) => {\r\n                  register(e, {required: true, minLength: 5})\r\n                  inputRef.current = e\r\n                }\r\n              }\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              autoComplete=\"current-password\"\r\n              ref={register({ required: true, minLength: 5 })}\r\n            />\r\n            <button type=\"submit\" className=\"btn effect01\" target=\"_blank\">\r\n              <span>LOGIN</span>\r\n            </button>\r\n          <br />\r\n          <div className=\"LoginText\">\r\n            Don't have an account yet?{\" \"}\r\n            <Link to=\"/register\" style={{ color: \"inherit\" }}>\r\n              Register here\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  );\r\n}\r\n\r\nexport default MainLogin;\r\n","import React from \"react\";\r\n\r\nimport Header from \"components/shared/Header/Header\";\r\nimport MainLogin from \"components/account/login/MainLogin\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MainLogin />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}